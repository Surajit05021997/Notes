-- int arr[] = new int[5];

-- Comparable interface - compareTo(Object obj)
-- Comparator interface - compare(Object obj1, Object obj2)

-- Different ways of taking input
	- BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
      String name = reader.readLine();
	- Scanner scanner = new Scanner(System.in);
	  int n = scanner.nextInt();
	  
--  Instance variables (primitive, Wrapper classes, references, objects (non-static)) - Heap
	Local Variables , references - stack
	
Initialization Block
--------------------
	This block is executed bfore every constructor call.
	Ex : class Demo{
	int i;
	{
	int i=10;
	syso("...");
	}
	public Demo(){
	}
	psvm(Strings args[]){ 
	Demo obj = new Demo();
	syso("...")
	}
	}
	
Variable no of parameter 
------------------------
-- We use ellipse (dataType... variableName)
	Ex : public class Demo {
	public static void myMethod(int...is ) {         Here int...is is actually int is[] but this can be done only with last parameter 
		System.out.println("asd");                          
	}
	public static void main(String[] args) {
		Demo.myMethod(1,2,3,4);
	}
	}
	
Collections
-----------
-- Its a utility class having many function to work with collection.
	- sort(),max(), min()
	
Arrays
------
-- Arrays is a class that contains various method for manipulating array.
	- Arrays.asList() : Convert an array into list object.
	- sort()
	- toString()
	
Stack
-----
-- Stack is a sub calss of Vector.
-- It follows LIFO.
-- methods are push(), pop(), peek(), search()

Iterate HashMap
---------------
	for (Map.Entry<Integer, String> e : hm.entrySet()) 
            System.out.println(e.getKey() + " " + e.getValue()); 
			
I/O
---
-- FileOutputStream fout=new FileOutputStream("D:\\testout.txt"); 
	BufferedOutputStream bout=new BufferedOutputStream(fout);    
     String s="Welcome to javaTpoint.";    
     byte b[]=s.getBytes();    
     bout.write(b);      
             
			 
-- FileInputStream fin=new FileInputStream("D:\\testout.txt");    
            int i=0;    
            while((i=fin.read())!=-1){    
             System.out.print((char)i);    
            }    







